Change Log

Remaining Items:
- Sort out max volume possible using buttons to avoid clipping etc. 
- Generate animation sequences
- Pick best soundfiles, ditch the rest
- Make chatter and telemetry one channel?
- Build droid..


Done/Ignored/Fixed/Created/Removed/Tested (version numbers are internal for now):

Version 7 - 20.12.2019:
- Added: State machine, pressing the button does different things in a pattern.
	First time: Audio FX on.
	Second time: Music on. 
	Third time: Music off. 
	Fourht time: Audio FX off. 
	Fifth time = First time..
- Added: Shutdown RPi OS command
- Changed: Startng quiet, no sound. Must press the button. 
- Changed: LED pins. Terminal block damaged, and found that a couple of LEDs were actually attached to same pin, possibly due to that terminal block being loose and the wire having come loose and landed on another pin by accident. 
- Changed: Increased brightness on droid LEDs
- Changed: Made droid LEDs solid, only button and fron LEDs flicker
- Added: Volume limiter to protect speaker.
- Changed: Starting volume decreased quite a bit. 

Version 6 - 25.11.2019:
- Changed: LED code now flickers desired LEDs (front facing and droid head) using a list of values
- Changed: Shutdown now gives a visual cue using the front LEDs

Version 5 - 24.11.2019:
- Changed: Volume now adjusted by push buttons, not the rotary encoder. The encoder, while it worked, consumed a lot of resources and made everything else sluggish. 
- Changed: Shutdown code now does not pass OS type command
- Changed: Now using pygame to adjust volumes
- Added: All LEDs are defined and blinking once a second for now
- Added: All buttons are defined and doing what they should
- Removed: DAC and rotary encoder code
- Done: Enclosure and electronics
- Added: Syslog logging

Version 4 - 14.08.2019: 
- Added: Amplifier code for TPA2016 i2c controlled amplifier. Currently powered via RPi, and this is causing clipping. 
- Removed: Initial volume setting. The new volume knob code sorts this out by default
- Removed: Some unecessary comments
- Added: Print is now caused by setting debug to True. Seems to speed up things not having to write to the terminal what is going on

Version 3 - 13.08.2019: 
- Removed: Volume buttons
- Added: SPI DAC for reading 10K pot for volume control

Version 2:
- Added: OS code to ensure system volume is 70%
- Added: Simple LED pulse code
- Done: Sorted out the final pinout
- Done: Temporarily set up to use push buttons for volume up/down as my rotary encoders were too inaccurate (many false readings)

Version 1:
- Created GitHub repo..updates will follow